{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReverse","setIsReverse","RESET","sortValue","setSortValue","sortedGoods","goods","preparedGoods","sort","goodA","goodB","ALPHABET","localeCompare","LENGTH","length","reverse","sortGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,UAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAASH,EAASM,OAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EA7BR,SACEC,EADF,GAGa,IADTH,EACQ,EADRA,UAAWH,EACH,EADGA,UAEPO,EAAgBD,EAmBtB,OAjBAC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITd,GACFO,EAAcQ,UAGTR,EAMaS,CAAU,GAAD,OAAKnB,GAAkB,CAAEM,YAAWH,cAEjE,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaR,EAASe,WACrCQ,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYjB,IAAcP,EAASe,WAJzC,iCASA,wBACEO,QAAS,kBAAMd,EAAaR,EAASiB,SACrCM,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYjB,IAAcP,EAASiB,SAJzC,4BASA,wBACEK,QAAS,kBAAMjB,GAAcD,IAC7BmB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAapB,IAJnB,sBASEG,GAAaH,IACb,wBACEkB,QAAS,WACPd,EAAaR,EAASM,OACtBD,GAAa,IAEfkB,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGZ,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCvGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a45619c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n  RESET = '',\n}\n\ninterface FilterParams {\n  sortValue: SortType;\n  isReverse: boolean;\n}\n\nfunction sortGoods(\n  goods: string[],\n  { sortValue, isReverse }: FilterParams,\n): string[] {\n  const preparedGoods = goods;\n\n  preparedGoods.sort((goodA, goodB) => {\n    switch (sortValue) {\n      case SortType.ALPHABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortValue, setSortValue] = useState(SortType.RESET);\n  const sortedGoods = sortGoods([...goodsFromServer], { sortValue, isReverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortValue(SortType.ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortValue !== SortType.ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortValue(SortType.LENGTH)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortValue !== SortType.LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReverse(!isReverse)}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReverse })}\n        >\n          Reverse\n        </button>\n\n        {(sortValue || isReverse) && (\n          <button\n            onClick={() => {\n              setSortValue(SortType.RESET);\n              setIsReverse(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}